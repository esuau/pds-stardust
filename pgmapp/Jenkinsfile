pipeline {
    
    agent any

    stages {

        stage('Continuous Integration') {

            stages {

                stage('Fetch from SCM') {

                    steps {
                        checkout scm
                    }

                }

                stage('Build') {
                    steps {
                        dir("pgmapp") {
                            sh '''
                                chmod +x gradlew
                                ./gradlew clean build -x test
                            '''
                        }
                    }
                }

                stage('Tests') {
                    steps {
                        dir("pgmapp") {
                            sh '''
                                ./gradlew test
                            '''
                        }
                    }
                }

                stage("SonarQube analysis") {
                    steps{
                        dir("pgmapp") {
                            withSonarQubeEnv('sonarqube') {
                                sh '''
                                    ./gradlew sonarqube
                                '''
                            }
                        }
                    }
                }
                
                stage("Quality Gate") {
                    steps {
                        sh 'sleep 5'
                        waitForQualityGate abortPipeline: true
                    }
                }
            }

            post {
                always {
                    junit 'pgmapp/app/build/test-results/**/*.xml'
                    publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'pgmapp/app/build/reports/tests/testDebugUnitTest',
                        reportFiles: 'index.html',
                        reportName: 'Tests report (DEBUG)',
                        reportTitles: 'Tests report (DEBUG)'])
                    
                    publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'pgmapp/app/build/reports/tests/testReleaseUnitTest',
                        reportFiles: 'index.html',
                        reportName: 'Tests report (RELEASE)',
                        reportTitles: 'Tests report (RELEASE)'])

                    publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'pgmapp/app/build/reports/jacoco/jacocoTestReport/html',
                        reportFiles: 'index.html',
                        reportName: 'Jacoco coverage report',
                        reportTitles: 'Jacoco coverage report'])
                }
            }

        }

    }
}
pipeline {

    agent any

    tools {
        jdk 'java11'
        gradle 'gradle'
    }

    stages {

        stage('Continuous Integration') {

            stages {

                stage('Fetch from SCM') {

                    steps {
                        checkout scm
                    }

                }

                stage('Build') {
                    steps {
                        dir("sc-account") {
                            sh 'gradle clean build -x test'
                        }
                    }
                }

                stage('Test') {
                    steps {
                        dir("sc-account") {
                            sh 'gradle test'
                        }
                    }
                }

                stage("SonarQube analysis") {
                    steps{
                        dir("sc-account") {
                            withSonarQubeEnv('sonarqube') {
                                sh 'gradle sonarqube'
                            }
                        }
                    }
                }
                
                stage("Quality Gate") {
                    steps {
                        sh 'sleep 5'
                        waitForQualityGate abortPipeline: true
                    }
                }
            }

            post {
                always {
                    publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'sc-account/build/reports/tests/test',
                        reportFiles: 'index.html',
                        reportName: 'Tests report',
                        reportTitles: 'Tests report'])

                    publishHTML (target : [allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'sc-account/build/reports/jacoco/test/html',
                        reportFiles: 'index.html',
                        reportName: 'Jacoco coverage report',
                        reportTitles: 'Jacoco coverage report'])
                        
                    recordIssues(tools: [spotBugs(pattern: 'sc-account/build/reports/spotbugs/*.xml')])
                }
            }

        }

    }
}
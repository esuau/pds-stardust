pipeline {

    agent any

    tools {
        jdk 'java11'
    }

    stages {

        stage('Continuous Integration') {

            stages {

                stage('Fetch from SCM') {

                    steps {
                        checkout scm
                    }

                }

                stage('Build') {
                    steps {
                        dir("geolocation/") {
                            sh '''
                                chmod +x gradlew
                                ./gradlew clean build -x test
                            '''
                        }
                    }
                }

                stage('Test') {
                    steps {
                        dir("geolocation/") {
                            sh '''
                                ./gradlew test
                            '''
                        }
                    }
                }

                stage("SonarQube analysis") {
                    steps{
                        dir("geolocation") {
                            withSonarQubeEnv('sonarqube') {
                                sh '''
                                    ./gradlew sonarqube
                                '''
                            }
                        }
                    }
                }
                
                stage("Quality Gate") {
                    steps {
                        sh 'sleep 5'
                        waitForQualityGate abortPipeline: true
                    }
                }
            }

            post {
                always {
                    junit 'geolocation/build/test-results/**/*.xml'
                    recordIssues(tools: [spotBugs(pattern: 'geolocation/build/reports/spotbugs/*.xml')])
                    cleanWs()
                }
            }

        }

    }
}
plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'net.researchgate.release' version '2.6.0'
	id "com.github.spotbugs" version "3.0.0"
    id "org.sonarqube" version "2.8"
	id 'jacoco'
	id 'java'
}

group = 'com.example'
sourceCompatibility = '11'

repositories {
	mavenCentral()


	maven {

	    name 'nexus'

	    url 'http://172.31.249.114:8081/repository/maven-releases/'

        credentials {
            username getProperty('repoUser')
            password getProperty('repoPassword')
        }
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.64'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.2'
	compile 'org.apache.httpcomponents:httpclient:4.5.12'
	implementation 'pds.stardust:cryptolib:1.0.0'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.64'
	compileOnly 		'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()

	jacoco {
        excludes = ["**/entities/**"]
    }
}

test.finalizedBy(project.tasks.jacocoTestReport)

release {
    failOnCommitNeeded = false
    failOnPublishNeeded = false
    failOnSnapshotDependencies = false
    failOnUnversionedFiles = false
    failOnUpdateNeeded = false
    revertOnFail = true
    preCommitText = '[RELEASE]'
	preTagCommitMessage = 'GEOLOCATION with version: '
    newVersionCommitMessage = 'Updating GEOLOCATION version to : '
    tagTemplate = '${version}'
    versionPropertyFile = 'gradle.properties'
    buildTasks = ['build']
    scmAdapters = [
        net.researchgate.release.GitAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        signTag = false
    }

}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

spotbugs {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "geolocation"
        property "sonar.projectName", "Geolocation Microservice"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.language", "java"
        property "sonar.java.libraries", "build/libs/*.jar"
        property "sonar.java.binaries", "build/classes/java/main,build/classes/java/test"
        property "sonar.java.test.binaries", "build/test-results/test/binary/"
        property "sonar.java.spotbugs.reportPaths", "build/reports/spotbugs/main.xml,build/reports/spotbugs/test.xml"
    }
}